# ====================================
# ======= MyISAM Variables  ==========
# ====================================
# 
# @ bulk_insert_buffer_size
# 
# Command-Line Format : --bulk-insert-buffer-size=#
# System Variable : bulk_insert_buffer_size
# Scope : Global, Session
# Dynamic : Yes
# Type : Integer
# Default Value : 8388608
# Minimum Value : 0
# Maximum Value (64-bit platforms) : 18446744073709551615
# Maximum Value (32-bit platforms) : 4294967295
# 
# MyISAM은 특별한 트리형 캐시를 사용하여 비어 있지 않은 테이블에 데이터를 추가 할 때
# INSERT ... SELECT, INSERT ... VALUES (...), (...), ... 및 LOAD DATA에 대한 대량 삽입을 더 빠르게 수행합니다.
# 이 변수는 스레드당 바이트 단위로 캐시 트리의 크기를 제한합니다. 0으로 설정하면이 최적화가 비활성화됩니다. 기본값은 8MB입니다.
# 
# * Apply Option
# bulk_insert_buffer_size=8388608
#
# --------------------------------------------
#
# @ have_rtree_keys
# 
# RTREE 인덱스를 사용할 수 있으면 YES, 그렇지 않으면 NO. (MyISAM 테이블의 공간 인덱스에 사용됩니다.)
#
# --------------------------------------------
#
# @ delay_key_write
# 
# Command-Line Format : --delay-key-write[={OFF|ON|ALL}]
# System Variable : delay_key_write
# Scope : Global
# Dynamic : Yes
# Type : Enumeration
# Default Value : ON
# Valid Values : ON, OFF, ALL
# 
# 이 변수는 지연된 키 쓰기를 사용하는 방법을 지정합니다. MyISAM 테이블에만 적용됩니다.
# 지연된 키 쓰기는 쓰기 사이에 키 버퍼가 플러시되지 않도록합니다. 15.2.1 절.“MyISAM 시작 옵션”도 참조하십시오.
# 
# 이 변수는 CREATE TABLE 문에서 사용할 수있는 DELAY_KEY_WRITE 테이블 옵션의 처리에 영향을주는 다음값중 하나를 가질 수 있습니다.
# 
# 옵션 설명
# OFF DELAY_KEY_WRITE는 무시됩니다.
# ON MySQL은 CREATE TABLE 문에 지정된 DELAY_KEY_WRITE 옵션을 따릅니다. 이것이 기본값입니다.
# ALL 새로 열린 모든 테이블은 DELAY_KEY_WRITE 옵션이 활성화 된 상태에서 생성 된 것처럼 처리됩니다.
# 노트
# 이 변수를 ALL로 설정하면 테이블이 사용 중일 때 다른 프로그램 (예 : 다른 MySQL 서버 또는 myisamchk) 내에서 MyISAM 테이블을 사용해서는 안됩니다.
# 그렇게하면 인덱스가 손상됩니다.
# 
# 테이블에 대해 DELAY_KEY_WRITE가 활성화 된 경우 모든 인덱스 업데이트시 테이블에 대한 키 버퍼가 플러시되지 않고 테이블이 닫힐 때만 플러시됩니다.
# 이렇게하면 키에 대한 쓰기 속도가 상당히 빨라지지만이 기능을 사용하는 경우 myisam_recover_options 시스템 변수 세트
# (예 : myisam_recover_options = 'BACKUP, FORCE')로 서버를 시작하여 모든 MyISAM 테이블의 자동 검사를 추가해야합니다.
# 섹션 5.1.7,“서버 시스템 변수”및 섹션 15.2.1,“MyISAM 시작 옵션”을 참조하십시오.
# 
# --skip-new로 mysqld를 시작하면 delay_key_write가 OFF로 설정됩니다.
# 
# 경고
# --external-locking을 사용하여 외부 잠금을 활성화하면 지연된 키 쓰기를 사용하는 테이블에 대한 인덱스 손상에 대한 보호가 없습니다.
# 
# * Apply Option
# delay_key_write=ON
# 
# --------------------------------------------
# 
# @ delay_key_write
# 
# https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_bind_address
# 
# Command-Line Format : --delay-key-write[={OFF|ON|ALL}]
# System Variable : delay_key_write
# Scope : Global
# Dynamic : Yes
# Type : Enumeration
# Default Value : ON
# Valid Values : ON, OFF, ALL
# 
# 이 변수는 지연된 키 쓰기를 사용하는 방법을 지정합니다. MyISAM 테이블에만 적용됩니다. 지연된 키 쓰기는 쓰기 사이에 키 버퍼가 플러시되지 않도록합니다.
# 15.2.1 절.“MyISAM 시작 옵션”도 참조하십시오.
# 이 변수는 CREATE TABLE 문에서 사용할 수있는 DELAY_KEY_WRITE 테이블 옵션의 처리에 영향을주는 다음 값 중 하나를 가질 수 있습니다.
# 
# 옵션    | 설명
# OFF    | DELAY_KEY_WRITE는 무시됩니다.
# ON     | MySQL은 CREATE TABLE 문에 지정된 DELAY_KEY_WRITE 옵션을 따릅니다. 이것이 기본값입니다.
# ALL    | 새로 열린 모든 테이블은 DELAY_KEY_WRITE 옵션이 활성화 된 상태에서 생성된 것처럼 처리됩니다.
#
# 노트
# 이 변수를 ALL로 설정하면 테이블이 사용 중일 때 다른 프로그램 (예 : 다른 MySQL 서버 또는 myisamchk) 내에서 MyISAM 테이블을 사용해서는 안됩니다.
# 그렇게하면 인덱스가 손상됩니다.
# 
# 테이블에 대해 DELAY_KEY_WRITE가 활성화 된 경우 모든 인덱스 업데이트시 테이블에 대한 키 버퍼가 플러시되지 않고 테이블이 닫힐 때만 플러시됩니다.
# 이렇게하면 키에 대한 쓰기 속도가 상당히 빨라지지만이 기능을 사용하는 경우 myisam_recover_options 시스템 변수 세트
# (예 : myisam_recover_options = 'BACKUP, FORCE')로 서버를 시작하여 모든 MyISAM 테이블의 자동 검사를 추가해야합니다.
# 섹션 5.1.7,“서버 시스템 변수”및 섹션 15.2.1,“MyISAM 시작 옵션”을 참조하십시오.
# 
# --skip-new로 mysqld를 시작하면 delay_key_write가 OFF로 설정됩니다.
# 
# 경고
# --external-locking을 사용하여 외부 잠금을 활성화하면 지연된 키 쓰기를 사용하는 테이블에 대한 인덱스 손상에 대한 보호가 없습니다.
#
# * Apply Option
# delay_key_write=ON
#  
# --------------------------------------------
# @ keep_files_on_create
# 
# Command-Line Format	--keep-files-on-create[={OFF|ON}]
# System Variable	keep_files_on_create
# Scope	Global, Session
# Dynamic	Yes
# Type	Boolean
# Default Value	OFF
# 
# DATA DIRECTORY 옵션없이 MyISAM 테이블을 생성하면 데이터베이스 디렉토리에 .MYD 파일이 생성됩니다.
# 기본적으로 MyISAM인 경우 기존 .MYD 파일을 찾으면 이를 덮어 씁니다. INDEX DIRECTORY 옵션없이 생성 된 테이블의 .MYI 파일에도 동일하게 적용됩니다.
# 이 동작을 억제하려면 keep_files_on_create 변수를 ON(1)으로 설정하십시오.이 경우 MyISAM은 기존 파일을 덮어 쓰지 않고 대신 오류를 반환합니다. 기본값은 OFF (0)입니다.
# 
# MyISAM 테이블이 DATA DIRECTORY 또는 INDEX DIRECTORY 옵션으로 생성되고 기존 .MYD 또는 .MYI 파일이있는 경우 MyISAM은 항상 오류를 반환합니다.
# 지정된 디렉토리에있는 파일을 덮어 쓰지 않습니다.
#
# * Apply Option
# keep_files_on_create=OFF
# 
# --------------------------------------------
# 
# read_buffer_size
# 
# Command-Line Format	--read-buffer-size=#
# System Variable	read_buffer_size
# Scope	Global, Session
# Dynamic	Yes
# Type	Integer
# Default Value	131072
# Minimum Value	8192
# Maximum Value	2147479552
# 
# MyISAM 테이블에 대한 순차 스캔을 수행하는 각 스레드는 스캔하는 각 테이블에 대해이 크기 (바이트)의 버퍼를 할당합니다. 순차 스캔을 여러 번 수행하는 경우이 값을 늘릴 수 있습니다.
# 기본값은 131072입니다. 이 변수의 값은 4KB의 배수여야 합니다. 4KB의 배수가 아닌 값으로 설정된 경우 해당 값은 가장 가까운 4KB의 배수로 내림됩니다.
# 
# 이 옵션은 모든 스토리지 엔진에 대해 다음 컨텍스트에서도 사용됩니다.
# * ORDER BY에 대한 행을 정렬 할 때 임시 파일 (임시 테이블이 아님)에 인덱스를 캐싱합니다.
# * 파티션에 대량 삽입하는 경우.
# * 중첩 된 쿼리 결과를 캐싱합니다.
# 
# read_buffer_size는 MEMORY 테이블의 메모리 블록 크기를 결정하는 다른 스토리지 엔진별 방법으로도 사용됩니다.
# 
# 다른 작업 중 메모리 사용에 대한 자세한 내용은 8.12.4.1 절.“MySQL이 메모리를 사용하는 방법”을 참조하십시오.
# 
# --------------------------------------------
# 
# @ read_rnd_buffer_size :
# 
# Property : Value
# Command-Line Format : --read-rnd-buffer-size=#
# System Variable : read_rnd_buffer_size
# Scope : Global, Session
# Dynamic : Yes
# Type : Integer
# Default Value : 262144
# Minimum Value : 1
# Maximum Value : 2147483647
#
# 이 변수는 MyISAM 테이블에서 읽기 및 모든 스토리지 엔진에서 다중 범위 읽기 최적화에 사용됩니다.
# 
# 키 정렬 작업 후에 MyISAM 테이블에서 행을 정렬 된 순서로 읽을 때 디스크 검색을 피하기 위해이 버퍼를 통해 행을 읽습니다. 8.2.1.14 절“ORDER BY 최적화”를 참조하십시오.
# 변수를 큰 값으로 설정하면 ORDER BY 성능을 크게 향상시킬 수 있습니다. 그러나 이것은 각 클라이언트에 할당 된 버퍼이므로 전역 변수를 큰 값으로 설정해서는 안됩니다.
# 대신 큰 쿼리를 실행해야하는 클라이언트 내에서만 세션 변수를 변경하십시오.
# 
# 다른 작업 중 메모리 사용에 대한 자세한 내용은 8.12.4.1 절“MySQL에서 메모리를 사용하는 방법”을 참조하십시오.
# 다중 범위 읽기 최적화에 대한 자세한 내용은 8.2.1.10 절.“다중 범위 읽기 최적화”를 참조하십시오.
#
# * Apply Option
# read_rnd_buffer_size=262144
# 
# --------------------------------------------
#
# @ concurrent_insert
# 
# Command-Line Format : --concurrent-insert[=value]
# System Variable : concurrent_insert
# Scope : Global
# Dynamic : Yes
# Type : Enumeration
# Default Value : AUTO
# Valid Values : NEVER(0), AUTO(1), ALWAYS(2)
# 
# AUTO(기본값)인 경우 MySQL은 데이터 파일 중간에 사용 가능한 블록이 없는 MyISAM 테이블에 대해 INSERT 및 SELECT 문을 동시에 실행하도록 허용합니다.
# 
# 이 변수는 다음 표에 표시된 값을 사용할 수 있습니다. 변수는 이름 값 또는 해당 정수 값을 사용하여 할당 할 수 있습니다.
# 
# 값 설명
# NEVER (또는 0) 동시 삽입을 비활성화합니다.
# AUTO (또는 1) (기본값) 구멍이없는 MyISAM 테이블에 대한 동시삽입을 활성화합니다.
# ALWAYS (또는 2) 구멍이있는 테이블을 포함하여 모든 MyISAM 테이블에 대해 동시삽입을 활성화합니다.
# 구멍이있는 테이블의 경우 다른 스레드에서 사용중인 경우 새 행이 테이블 끝에 삽입됩니다. 그렇지 않으면 MySQL은 정상적인 쓰기 잠금을 획득하고 행을 구멍에 삽입합니다.
# --skip-new로 mysqld를 시작하면 concurrent_insert가 NEVER로 설정됩니다.
# 
# 8.11.3 절.“동시 삽입물”도 참조하십시오.
#
# * Apply Option
# concurrent_insert=NEVER
# 
# --------------------------------------------
# 
# @ key_buffer_size
# 
# Command-Line Format : --key-buffer-size=#
# System Variable : key_buffer_size
# Scope : Global
# Dynamic : Yes
# Type : Integer
# Default Value : 8388608
# Minimum Value : 8
# Maximum Value (64-bit platforms) : OS_PER_PROCESS_LIMIT
# Maximum Value (32-bit platforms) : 4294967295
# 
# MyISAM 테이블의 인덱스 블록은 버퍼링되고 모든 스레드에서 공유됩니다. key_buffer_size는 인덱스 블록에 사용되는 버퍼의 크기입니다.
# 키 버퍼는 키 캐시라고도합니다.
# 
# key_buffer_size에 대한 최대 허용 설정은 32 비트 플랫폼에서 4GB-1입니다. 64 비트 플랫폼에는 더 큰 값이 허용됩니다.
# 사용 가능한 실제 RAM 및 운영 체제 또는 하드웨어 플랫폼에서 부과하는 프로세스 별 RAM 제한에 따라 유효 최대 크기는 더 적을 수 있습니다.
# 이 변수의 값은 요청 된 메모리 양을 나타냅니다. 내부적으로 서버는이 양까지 가능한 한 많은 메모리를 할당하지만 실제 할당은 더 적을 수 있습니다.
# 
# 모든 읽기 및 다중 쓰기에 대해 더 나은 인덱스 처리를 위해 값을 늘릴 수 있습니다.
# MyISAM 스토리지 엔진을 사용하여 MySQL을 실행하는 것이 주요 기능인 시스템에서는 머신 총 메모리의 25 %가이 변수에 허용되는 값입니다.
# 그러나 값을 너무 크게 만들면 (예 : 시스템 총 메모리의 50 % 이상) 시스템이 페이징을 시작하고 매우 느려질 수 있습니다.
# MySQL은 데이터 읽기를 위해 파일 시스템 캐싱을 수행하기 위해 운영 체제에 의존하기 때문에 파일 시스템 캐시를위한 공간을 남겨야합니다.
# MyISAM 외에도 사용할 수있는 다른 스토리지 엔진의 메모리 요구 사항도 고려해야합니다.
# 
# 동시에 많은 행을 쓸 때 속도를 높이려면 LOCK TABLES를 사용하십시오. 8.2.4.1 절.“INSERT 문 최적화”를 참조하십시오.
# 
# SHOW STATUS 문을 실행하고 Key_read_requests, Key_reads, Key_write_requests 및 Key_writes 상태 변수를 검사하여 키 버퍼의 성능을 확인할 수 있습니다.
# (섹션 13.7.5,“SHOW 문”참조) Key_reads / Key_read_requests 비율은 일반적으로 0.01 미만이어야합니다.
# Key_writes / Key_write_requests 비율은 대부분 업데이트 및 삭제를 사용하는 경우 일반적으로 1에 가깝지만 동시에 많은 행에 영향을
# 미치는 업데이트를 수행하는 경향이 있거나 DELAY_KEY_WRITE 테이블 옵션을 사용하는 경우 훨씬 더 작을 수 있습니다.
# 
# 사용중인 키 버퍼의 비율은 key_blocks_unused 상태 변수 및 key_cache_block_size 시스템 변수에서 사용할 수있는 버퍼 블록 크기와 함께 key_buffer_size를 사용하여 결정할 수 있습니다.
# 1 - ((Key_blocks_unused * key_cache_block_size) / key_buffer_size)
# 
# 키 버퍼의 일부 공간이 관리 구조를 위해 내부적으로 할당되기 때문에이 값은 근사치입니다.
# 이러한 구조의 오버 헤드 양에 영향을 미치는 요소에는 블록 크기와 포인터 크기가 포함됩니다.
# 블록 크기가 증가하면 오버 헤드로 인해 손실되는 키 버퍼의 비율이 감소하는 경향이 있습니다.
# 블록이 클수록 읽기 작업 수가 적어 지지만 (읽기 당 더 많은 키를 얻으므로) 반대로 검사되지 않는 키 읽기가 증가합니다 (블록의 모든 키가 쿼리와 관련이없는 경우).
# 
# 여러 개의 MyISAM 키 캐시를 생성 할 수 있습니다. 4GB의 크기 제한은 그룹이 아닌 각 캐시에 개별적으로 적용됩니다. 8.10.2 절.“MyISAM 키 캐시”를 참조하십시오.
#
# * Apply Option
# key_buffer_size=8388608
#
# --------------------------------------------
#
# @key_cache_age_threshold
# 
# Command-Line Format : --key-cache-age-threshold=#
# System Variable : key_cache_age_threshold
# Scope : Global
# Dynamic : Yes
# Type : Integer
# Default Value : 300
# Minimum Value : 100
# Maximum Value : (64-bit platforms)	18446744073709551615
# Maximum Value : (32-bit platforms)	4294967295
# Block Size : 100
# 
# This value controls the demotion of buffers from the hot sublist of a key cache to the warm sublist. Lower values cause demotion to happen more quickly. The minimum value is 100. The default value is 300. See Section 8.10.2, “The MyISAM Key Cache”.
# 
# 이 값은 키 캐시의 핫 하위 목록에서 warm 하위 목록으로의 버퍼 강등을 제어합니다. 값이 낮 으면 강등이 더 빨리 발생합니다. 최소값은 100입니다. 기본값은 300입니다. 8.10.2 절.“MyISAM 키 캐시”를 참조하십시오.
# 
# --------------------------------------------
# 
# @ key_cache_block_size
# 
# Command-Line Format : --key-cache-block-size=#
# System Variable : key_cache_block_size
# Scope : Global
# Dynamic : Yes
# Type : Integer
# Default Value : 1024
# Minimum Value : 512
# Maximum Value : 16384
# Block Size ; 512
# 
# 키 캐시에있는 블록의 크기 (바이트)입니다. 기본값은 1024입니다. 8.10.2 절.“MyISAM 키 캐시”를 참조하십시오.
#
# * Apply Option
# key_cache_block_size=1024
#
# --------------------------------------------
# 
# @ key_cache_division_limit
# 
# Command-Line Format : --key-cache-division-limit=#
# System Variable : key_cache_division_limit
# Scope : Global
# Dynamic : Yes
# Type : Integer
# Default Value : 100
# Minimum Value : 1
# Maximum Value : 100
# 
# The division point between the hot and warm sublists of the key cache buffer list. The value is the percentage of the buffer list to use for the warm sublist. Permissible values range from 1 to 100. The default value is 100. See Section 8.10.2, “The MyISAM Key Cache”.
# 
# 키 캐시 버퍼 목록의 hot 및 warm 하위 목록 사이의 구분 지점입니다. 값은 warm 하위 목록에 사용할 버퍼 목록의 백분율입니다.
# 허용되는 값의 범위는 1에서 100까지입니다. 기본값은 100입니다. 8.10.2 절.“MyISAM 키 캐시”를 참조하십시오.
#
# * Apply Option
# key_cache_division_limit=100
#
# --------------------------------------------
# 
# @ myisam_data_pointer_size
# 
# Command-Line Format	--myisam-data-pointer-size=#
# System Variable	myisam_data_pointer_size
# Scope	Global
# Dynamic	Yes
# Type	Integer
# Default Value	6
# Minimum Value	2
# Maximum Value	7
# 
# MAX_ROWS 옵션이 지정되지 않은 경우 MyISAM 테이블에 대해 CREATE TABLE에서 사용할 기본 포인터 크기 (바이트)입니다.
# 이 변수는 2보다 작거나 7보다 클 수 없습니다. 기본값은 6입니다. 섹션 B.3.2.10,“테이블이 가득 참”을 참조하십시오.
# 
# * Apply Option
# myisam_data_pointer_size=6
#
# --------------------------------------------
# 
# @ myisam_max_sort_file_size
# 
# Command-Line Format : --myisam-max-sort-file-size=#
# System Variable : myisam_max_sort_file_size
# Scope : Global
# Dynamic : Yes
# Type : Integer
# Default Value (Windows) : 2146435072
# Default Value (Other, 64-bit platforms) : 9223372036853727232
# Default Value (Other, 32-bit platforms) : 2147483648
# Maximum Value (Windows) ; 2146435072
# Maximum Value (Other, 64-bit platforms) : 9223372036853727232
# Maximum Value (Other, 32-bit platforms) : 2147483648
# 
# MyISAM 인덱스를 다시 생성하는 동안 (REPAIR TABLE, ALTER TABLE 또는 LOAD DATA 동안) MySQL이 사용할 수있는 임시 파일의 최대 크기입니다.
# 파일 크기가이 값보다 클 경우 인덱스는 대신 키 캐시를 사용하여 생성되며 속도가 느립니다. 값은 바이트 단위로 제공됩니다.
# 
# MyISAM 인덱스 파일이이 크기를 초과하고 디스크 공간을 사용할 수있는 경우 값을 늘리면 성능에 도움이 될 수 있습니다.
# 원래 색인 파일이있는 디렉토리를 포함하는 파일 시스템에서 공간을 사용할 수 있어야합니다.
#
# * Apply Option
# myisam_max_sort_file_size=2146435072
#
# --------------------------------------------
# 
# myisam_mmap_size
# 
# Command-Line Format	--myisam-mmap-size=#
# System Variable	myisam_mmap_size
# Scope	Global
# Dynamic	No
# Type	Integer
# Default Value (64-bit platforms)	18446744073709551615
# Default Value (32-bit platforms)	4294967295
# Minimum Value	7
# Maximum Value (64-bit platforms)	18446744073709551615
# Maximum Value (32-bit platforms)	4294967295
# 
# The maximum amount of memory to use for memory mapping compressed MyISAM files. If many compressed MyISAM tables are used, the value can be decreased to reduce the likelihood of memory-swapping problems.
# 
# 압축 된 MyISAM 파일을 메모리 매핑하는 데 사용할 최대 메모리 양입니다. 압축 된 MyISAM 테이블이 많이 사용되는 경우 값을 줄여 메모리 스왑 문제의 가능성을 줄일 수 있습니다.
# 
# * Apply Option
# myisam_mmap_size=18446744073709551615
#
# --------------------------------------------
# 
# @ myisam_recover_options
# 
# Command-Line Format : --myisam-recover-options[=list]
# System Variable : myisam_recover_options
# Scope : Global
# Dynamic : No
# Type : Enumeration
# Default Value : OFF
# Valid Values : OFF, DEFAULT, BACKUP, FORCE, QUICK
# 
# MyISAM 스토리지 엔진 복구 모드를 설정합니다. 변수 값은 OFF, DEFAULT, BACKUP, FORCE 또는 QUICK 값의 조합입니다.
# 여러 값을 지정하는 경우 쉼표로 구분하십시오.
# 서버 시작시 값없이 변수를 지정하는 것은 DEFAULT를 지정하는 것과 같고 명시 적 값 ""로 지정하면 복구가 비활성화됩니다(OFF 값과 동일).
# 복구가 활성화되면 mysqld가 MyISAM 테이블을 열 때마다 테이블이 충돌 한 것으로 표시되었는지 또는 제대로 닫히지 않았는지 확인합니다.
# (마지막 옵션은 외부 잠금을 비활성화 한 상태에서 실행하는 경우에만 작동합니다.)이 경우 mysqld는 테이블에 대해 검사를 실행합니다.
# 테이블이 손상된 경우 mysqld는이를 복구하려고 시도합니다.
# 
# 다음 옵션은 복구 작동 방식에 영향을줍니다.
# Option   |   Description
# OFF      |   복구하지 않음
# DEFAULT  |   백업, 강제 또는 빠른 확인없이 복구합니다.
# BACKUP   |   복구 중에 데이터 파일이 변경된 경우 tbl_name.MYD 파일의 백업을 tbl_name-datetime.BAK로 저장합니다.
# FORCE    |   file..MYD 파일에서 둘 이상의 행이 손실 되더라도 복구를 실행하십시오.
# QUICK    |   삭제 블록이없는 경우 테이블의 행을 확인하지 마십시오.
# 
# 서버가 테이블을 자동으로 복구하기 전에 복구에 대한 메모를 오류 로그에 기록합니다.
# 사용자 개입없이 대부분의 문제에서 복구 할 수 있도록하려면 BACKUP, FORCE 옵션을 사용해야합니다.
# 이렇게하면 일부 행이 삭제 되더라도 테이블이 강제로 복구되지만 나중에 발생한 상황을 조사 할 수 있도록 이전 데이터 파일을 백업으로 유지합니다.
# 
# 15.2.1 절.“MyISAM 시작 옵션”을 참조하십시오.
# 
# --------------------------------------------
#
# myisam_repair_threads
# 
# Command-Line Format : --myisam-repair-threads=#
# System Variable : myisam_repair_threads
# Scope : Global, Session
# Dynamic : Yes
# Type : Integer
# Default Value : 1
# Minimum Value : 1
# Maximum Value (64-bit platforms) : 18446744073709551615
# Maximum Value (32-bit platforms) : 4294967295
# 
# 이 값이 1보다 크면 MyISAM 테이블 인덱스는 정렬 방식으로 복구하는 동안 병렬로 생성됩니다 (자체 스레드의 각 인덱스). 기본값은 1입니다.
# 
# 노트
# 다중 스레드 복구는 여전히 베타 품질 코드입니다.

